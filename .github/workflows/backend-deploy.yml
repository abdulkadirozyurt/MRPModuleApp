# name: Deploy Backend

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v3

#       - name: Log in to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Configure SSH Key
#         run: |
#           mkdir -p ~/.ssh
#           echo "${{ secrets.VDS_SSH_KEY }}" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
#           ssh-keyscan -H ${{ secrets.VDS_IP }} >> ~/.ssh/known_hosts

#       - name: Build Docker Image
#         run: |
#           docker build --no-cache --platform=linux/amd64 -t my-backend-image .
#           docker tag my-backend-image ${{ secrets.DOCKER_USERNAME }}/my-backend-image:latest

#       - name: Push Docker Image to DockerHub
#         run: |
#           docker push ${{ secrets.DOCKER_USERNAME }}/my-backend-image:latest

#       - name: Cleanup Docker Images and Volumes
#         run: |
#           ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{ secrets.VDS_IP }} << EOFMARK
#           docker system prune -af --volumes || true
#           EOFMARK

#       - name: Deploy to VDS
#         env:
#           DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#           MONGO_URI: ${{ secrets.MONGO_URI }}
#           DB_NAME: ${{ secrets.DB_NAME }}
#           VDS_IP: ${{ secrets.VDS_IP }}
#           JWT_SECRET: ${{ secrets.JWT_SECRET }}
#         run: |
#           ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{ secrets.VDS_IP }} << EOFMARK
#           mkdir -p /var/www/backend
#           echo "PORT=5000" > /var/www/backend/.env
#           echo "MONGO_URI=$MONGO_URI" >> /var/www/backend/.env
#           echo "DB_NAME=$DB_NAME" >> /var/www/backend/.env
#           echo "CLIENT_URL=http://$VDS_IP" >> /var/www/backend/.env
#           echo "JWT_SECRET=$JWT_SECRET" >> /var/www/backend/.env

#           docker pull $DOCKER_USERNAME/my-backend-image:latest
#           docker stop backend-container || true
#           docker rm backend-container || true
#           docker run -d \
#             --name backend-container \
#             --restart always \
#             --env-file /var/www/backend/.env \
#             -p 5000:5000 \
#             $DOCKER_USERNAME/my-backend-image:latest
#           EOFMARK

name: Deploy Backend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Configure SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VDS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VDS_IP }} >> ~/.ssh/known_hosts

      - name: Build Docker Image
        run: |
          docker build --no-cache --platform=linux/amd64 -t my-backend-image .
          docker tag my-backend-image ${{ secrets.DOCKER_USERNAME }}/my-backend-image:latest

      - name: Push Docker Image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-backend-image:latest

      - name: Cleanup Docker Images and Volumes
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{ secrets.VDS_IP }} << EOFMARK
          docker system prune -af --volumes || true
          EOFMARK

      - name: Deploy to VDS
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          DB_NAME: ${{ secrets.DB_NAME }}
          VDS_IP: ${{ secrets.VDS_IP }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{ secrets.VDS_IP }} << EOFMARK
          mkdir -p /var/www/backend
          echo "PORT=5000" > /var/www/backend/.env
          echo "MONGO_URI=$MONGO_URI" >> /var/www/backend/.env
          echo "DB_NAME=$DB_NAME" >> /var/www/backend/.env
          echo "CLIENT_URL=http://$VDS_IP" >> /var/www/backend/.env
          echo "JWT_SECRET=$JWT_SECRET" >> /var/www/backend/.env

          docker pull $DOCKER_USERNAME/my-backend-image:latest
          docker stop backend-container || true
          docker rm backend-container || true
          docker run -d \
            --name backend-container \
            --restart always \
            --env-file /var/www/backend/.env \
            -p 5000:5000 \
            $DOCKER_USERNAME/my-backend-image:latest
          EOFMARK
